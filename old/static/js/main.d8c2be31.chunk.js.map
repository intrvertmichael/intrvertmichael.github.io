{"version":3,"sources":["serviceWorker.js","typedComp.js","top.js","project.js","projectData.js","tools.js","body.js","footer.js","index.js","app.js"],"names":["Boolean","window","location","hostname","match","TypedComp","options","strings","this","props","typeSpeed","backSpeed","startDelay","cursorChar","loop","typed","Typed","el","destroy","_this","react_default","a","createElement","className","style","whiteSpace","ref","React","Component","Top","setTimeout","document","querySelector","opacity","id","typedComp_TypedComp","role","aria-label","Project","src","imgUrl","alt","title","description","display","linkUrl","href","onClick","console","log","rel","target","gitUrl","projectData","Tools","Body","projectComponent","ProjectData","map","single","key","Footer","height","width","frameBorder","allowtransparency","scrolling","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d8c2be31.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\nimport React from 'react';\nimport Typed from 'typed.js';\n\nexport default class TypedComp extends React.Component {\n\n  componentDidMount() {\n    const { strings } = this.props;\n\n    const options = {\n    \tstrings: strings,\n      typeSpeed: 50,\n      backSpeed: 50,\n      startDelay: 1000,\n      cursorChar: '_',\n      loop: false\n    };\n\n    // this.el refers to the <span> in the render() method\n    this.typed = new Typed(this.el, options);\n  }\n\n  componentWillUnmount() {\n    // to prevent memory leaks\n    this.typed.destroy();\n  }\n\n  render() {\n    return (\n      <div className=\"typed\">\n        <span\n          style={{ whiteSpace: 'pre' }}\n          ref={(el) => { this.el = el; }}\n        />\n      </div>\n    );\n  }\n}\n","\nimport React from 'react';\nimport TypedComp from './typedComp'\n\n\nexport default function Top() {\n\n  setTimeout(function(){\n    document.querySelector('.description').style.opacity='1';\n  }, 11000);\n\nreturn(\n  <header id=\"top\">\n    <TypedComp\n      strings={[\n        `Hello,^1000 <b>myName</b> = <mark>Michael</mark>;^1000 <br> I am an <i>introvert</i>.^1000 <br> I want to make things that help people.`\n      ]}\n    />\n\n    <div className='description'>\n      <p>\n        I like Art,\n        Design,\n        Javascript <span role=\"img\" aria-label=\"computer\">🖥</span> ,\n        Triathlons,\n        and Improving myself.\n      </p>\n\n    </div>\n  </header>\n)\n}\n","import React from 'react'\n\nexport default function Project(props){\n\n  return (\n      <div className='single-project'>\n        <div className='pic'>\n        <img src={props.imgUrl} alt=''/>\n        </div>\n        <summary>\n          <h3> {props.title} </h3>\n          <p> {props.description}</p>\n          <a\n          style = {{display: !props.linkUrl && 'none'}}\n          href={props.linkUrl}\n          onClick={()=>console.log('project clicked')}\n          rel=\"noopener noreferrer\"\n          target=\"_blank\">\n          More Info\n          </a>\n\n          <div className='links'>\n          <a\n          style = {{display: !props.gitUrl && 'none'}}\n          href={props.gitUrl}\n          target=\"_blank\"\n          className = 'github'\n          rel=\"noopener noreferrer\">\n          <img\n          src='logo-github-w.png'\n          alt='github link'/>\n          </a>\n          </div>\n\n        </summary>\n      </div>\n  )\n}\n","\n\nconst projectData = [\n  {\n    id: 1,\n    title: 'Markdown Tab',\n    imgUrl: 'markdown-tab.gif',\n    description: 'A chrome extension',\n    linkUrl: 'https://chrome.google.com/webstore/detail/markdown-tab/cehkfljonbjciikomaeapoopplldkkdn',\n    gitUrl: 'https://github.com/minimalmichael/MarkdownTab'\n  }\n]\n\nexport default projectData;\n","import React from 'react';\n\n\nexport default function Tools() {\n  return (\n    <div className='tools'>\n      <h3>Projects made with:</h3>\n      <ul>\n        <li> <img src='logo-js.png' alt='js logo' /> Javascript(); </li>\n        <li> <img src='logo-html.png' alt='html logo' /> {'<HTML>'} </li>\n        <li> <img src='logo-css.png' alt='css logo' /> {'CSS {}'} </li>\n        <li> <img src='logo-react.png' alt='react logo' /> {'<React />'} </li>\n      </ul>\n    </div>\n  )\n}\n","import React from 'react';\nimport Project from './project'\nimport ProjectData from './projectData'\nimport Tools from './tools'\nexport default function Body() {\n\nconst projectComponent = ProjectData.map(single => <Project key={single.id} imgUrl={single.imgUrl} title={single.title} description={single.description} linkUrl={single.linkUrl} gitUrl={single.gitUrl} />);\n\nreturn (\n  <div id='body'>\n    <div className='projects'>\n      {projectComponent}\n      <Tools />\n    </div>\n  </div>\n)\n}\n","import React from 'react';\n\nexport default function Footer() {\n  return (\n    <div id='footer'>\n      <div className='widgets'>\n\n        <div className='book'>\n          <h5>Currently Reading:</h5>\n          <img src='https://i.gr-assets.com/images/S/compressed.photo.goodreads.com/books/1313501697l/11297044.jpg' alt='Currently Reading: Steve Jobs'/>\n        </div>\n\n        <div className='workout'>\n        <h5> Workouts: </h5>\n        <iframe title='strava' height='455' width='300' frameBorder='0' allowtransparency='true' scrolling='no' src='https://www.strava.com/athletes/4359844/latest-rides/f7ac531735ff32a1e9948dcbb2e5759efb5eaac5'></iframe>\n        </div>\n\n      </div>\n\n      <div className='social'>\n      <ul>\n        <li>\n        <a href='https://github.com/minimalmichael' target=\"_blank\" rel=\"noopener noreferrer\">\n        <img src='logo-github-w.png' alt='github logo' />\n        </a>\n        </li>\n\n        <li>\n        <a href='https://twitter.com/mnmlinterests' target=\"_blank\" rel=\"noopener noreferrer\">\n        <img src='logo-twitter-w.png' alt='twitter logo' />\n        </a>\n        </li>\n\n        <li>\n        <a href='https://glitch.com/@minimalmichael' target=\"_blank\" rel=\"noopener noreferrer\">\n        <img src='logo-glitch-w.png' alt='glitch logo' />\n        </a>\n        </li>\n\n        <li>\n        <a href='https://www.instagram.com/michael.introvert/' target=\"_blank\" rel=\"noopener noreferrer\">\n        <img src='logo-instagram-w.png' alt='ig logo' />\n        </a>\n        </li>\n\n        <li>\n        <a href='#top'> Elevator to the Top ^</a>\n        </li>\n\n      </ul>\n\n      </div>\n\n    </div>\n  )\n}\n","\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\n\nimport './_style.css';\nimport './_media.css';\nimport App from './app';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","\n\nimport React from 'react';\nimport Top from './top';\nimport Body from './body'\nimport Footer from './footer'\n\nexport default function App() {\n  setTimeout(function(){\n    document.querySelector('.arrow').style.opacity='.5';\n  }, 12500);\n\n  return (\n    <div className=\"App\">\n      <a href='#body' className='arrow'><img src='arrow.png' alt='arrow'/></a>\n      <Top />\n      <Body />\n      <Footer />\n    </div>\n  );\n}\n"],"sourceRoot":""}